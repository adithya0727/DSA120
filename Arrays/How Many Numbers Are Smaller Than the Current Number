/* Approaches : 
Input: nums = [8,1,2,2,3]
Output: [4,0,1,1,3]
Explanation: 
For nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3).
1) using two loops and checking for each element via comparison : brute force.
2) time optimise : we create a different vector to store stored elements and then store the hashmap according to their respective positions. we then rewrite the new created array with the values according to map of the key in the input vector.

*/

1) vector<int>v;
        int n = nums.size(),count=0;
        for(int i=0;i<n;i++){
            count =0;
            for(int j =0;j<n;j++){
                if(nums[i] > nums[j] && j!=i ){
                    count++;
                }
            }
            v.push_back(count);
        }
        return nums;

2) vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        map<int,int>m;
        int n= nums.size();
        vector<int>v(nums);
        sort(v.begin(),v.end());
        for(int i=0;i<n;i++){
            m.insert({v[i],i});
        }
        for(int j=0;j<n;j++){
            v[j] = m[nums[j]];
        }
        return v;
    }
