/* Approach:

1) SAME APPROACH AS FIND FIRST AND LAST INDEX POSITION OF AN ELEMENT. SINCE IT IS SORTED, WE JUST PREFORM 
LASTINDEX - FIRSTINDEX + 1 : to get the window size od the count.
*/

1) private:
    int firstele(int nums[],int &n, int &target){
        int res1=-1;
        int start=0,end=n-1;
        while(start <= end){
            int mid = start + (end-start)/2;
            if(nums[mid] == target){
                res1 = mid;
                end = mid - 1;
            }
            else if(nums[mid] >= target){
                end = mid - 1;
            }
            else{
                start = mid + 1;
            }
        }
        return res1;
    }

    int secondele(int nums[],int &n, int &target){
        int res2=-1;
        int start=0,end=n-1;
        while(start <= end){
            int mid = start + (end-start)/2;
            if(nums[mid] == target){
                res2 = mid;
                start = mid + 1;
            }
            else if(nums[mid] <= target){
                start = mid + 1;
            }
            else{
                end = mid -1;
            }
        }
        return res2;
    }
public:	
    
	int count(int arr[], int n, int x) {
	    int cnt=0;
	    int a = firstele(arr,n,x);
	    int y = secondele(arr,n,x);
        if(a == -1 || y == -1){
            return 0;
        }
	    cnt = y-a+1;
	    return cnt;
	}
