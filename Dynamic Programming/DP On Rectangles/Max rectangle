/* Approach:                [REFER : https://www.youtube.com/watch?v=jC_cWLy7jSI] : Built On Largest Rectangle In Histogram Problem.
Given a binary matrix M of size n X m. Find the maximum area of a rectangle formed only of 1s in the given matrix.
Tagged as dp : Because of Histo Array which is keeping track of the past and keeps on solving based on its memory.
1) 
TC : SC : 
*/

1) private:
    int maxRect(vector<int> & arr , int &m){
        stack<int>st;
        int maxA = 0;
        for(int i=0;i<=m;i++){
            while(!st.empty() && (i==m || arr[st.top()] >= arr[i])){
                int height = arr[st.top()];
                st.pop();
                int width = 0;
                if(st.empty())  width = i;
                else width = i - st.top() - 1;
                maxA = max(maxA, width*height);
            }
            st.push(i);
        }
        return maxA;
    }    
    
  public:
    int maxArea(int M[MAX][MAX], int n, int m) {
        vector<int>histo(m+1,0);
        int maxArea = 0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(M[i][j] == 0)
                    histo[j] = 0;
                else
                    histo[j] += 1;
            }
            maxArea = max(maxArea,maxRect(histo,m));
        }
    return maxArea;
    }
