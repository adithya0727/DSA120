/* Approach :
You are given an array prices where prices[i] is the price of a given stock on the ith day.
You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.
Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

1) for loop : traverse the ith day and consider it as selling value and at the same time keep the minimum possible buy value in a variable and subtract all the 
sell values with that point minimum_biy value.
TC : O(N)  SC : O(1)
*/

1) public:
    int maxProfit(vector<int>& prices) {
        int n=prices.size(),profit=INT_MIN,min_buy=prices[0];
        if(n==1){return 0;}
        for(int i=1;i<n;i++){
            profit = max(profit,prices[i]-min_buy);  //for each sell day : subtract with the curr_min possible.
            min_buy = min(min_buy,prices[i]);      //update to find new minimum.
        }
        if(profit <=0){return 0;}
        return profit;
    }
