/* Approach:

1)

2)

3)

4)

*/

1) private:
        bool cal(int idx1, int idx2 , string &pattern, string &str,vector<vector<int>>&dp){
            if(idx1 < 0 && idx2 < 0)    return true;
            if(idx1 < 0 && idx2 >=0)    return false;
            if(idx2 < 0 && idx1 >=0){
                for(int i=0;i<idx1;i++){
                    if(pattern[i] != '*')   
                        return false;
                }
                return true;
            }
            if(dp[idx1][idx2] != -1)    return dp[idx1][idx2];
            if(pattern[idx1] == str[idx2] || pattern[idx1] == '?')
                return dp[idx1][idx2] = cal(idx1-1,idx2-1,pattern,str,dp);
            if(pattern[idx1] == '*')
                return dp[idx1][idx2] = cal(idx1-1,idx2,pattern,str,dp) or cal(idx1,idx2-1,pattern,str,dp);
            return false;
        }
    
    
  public:
    
    int wildCard(string pattern, string str) {
        int n = pattern.length(),m = str.length();
        vector<vector<int>>dp(n,vector<int>(m,-1));
        return cal(n-1,m-1,pattern,str,dp);
    }
