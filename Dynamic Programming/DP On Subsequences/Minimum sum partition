/* Approach:          [PATTERN : SUBSET SUM TABULATION]

1) Tabulation : 
TC : O(N*SUM) + O(SUM) : final array traversal SC : O(N*SUM)
*/

1) public:
	int minDifference(int arr[], int n)  { 
	    int sum = 0;
	    for(int i=0;i<n;i++)    sum += arr[i];
	    vector<vector<bool>>dp(n,vector<bool>(sum+1,false));
        for(int i=0;i<n;i++)    dp[i][0] = true;
        if(arr[0] <= sum)
            dp[0][arr[0]] = true;
        for(int i=1;i<n;i++){
            for(int tar=1;tar<=sum;tar++){
                bool notpick = dp[i-1][tar];
                bool pick = false;
                if(arr[i] <= tar)
                    pick = dp[i-1][tar-arr[i]];
                dp[i][tar] = pick or notpick; 
            }
        }
        int mini = 1e9;
        for(int s1=0;s1<=sum/2;s1++){
            if(dp[n-1][s1] == true){
                mini = min(mini,abs(s1 - (sum-s1)));
            }
        }
        return mini;
	} 
