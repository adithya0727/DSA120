/* Approach:
Given an array Arr of N positive integers and an integer K, find K largest elements from the array.  The output elements should be printed in decreasing order.
Example 1:
Input:
N = 5, K = 2
Arr[] = {12, 5, 787, 1, 23}
Output: 787 23
Explanation: 1st largest element in the
array is 787 and second largest is 23.
1) use minheap : topmost element will be the smallest , maintain the size only upto k , then just push all k elements into vector , but they are in ascending order
so just reverse them.
time - O(N*LogK) space - O(K)
*/

1) vector<int> kLargest(int arr[], int n, int k) {
	    vector<int>v;
	    priority_queue<int,vector<int>,greater<int>>p;
	    for(int i=0;i<n;i++){
	        p.push(arr[i]);
	        if(p.size() > k){
	            p.pop();
	        }
	    }
	    while(!p.empty()){
	        v.push_back(p.top());
	        p.pop();
	    }
	    reverse(v.begin(),v.end());
	    return v;
	}
