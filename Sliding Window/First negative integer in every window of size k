/* Approach :
Question : given fixed window size K -> return the first negative integer in that window size and continue till N and store them in a vector.
1)create a list to store all negative integer post each iteration 
2)check if j is -ve , if yes pushback
3)if window size is reached : a) First case -> no elements yet in the list? insert zero and move the window. b) if exists ->
4) pushback the first integer that will be the first negative one , then move we move the window , we check if that I is the same as the first element in the list?
5) If yes , the element is the first one and its going out of the window , then we better pop off that from the list as it doesnt exist in the window anymore.
6) slide window , i++ , j++.
*/




vector<long long> printFirstNegativeInteger(long long int A[],long long int N, long long int K) {
                                                
    vector<long long>v;
    list<long long>l;
    int i=0,j=0;
    while(j<N){
        if(A[j] < 0){
            l.push_back(A[j]);
        }
        if(j-i+1 < K){
            j++;
        }
        else if(j-i+1 == K){
            if(l.empty()){
                v.push_back(0);
            }
            else {
            v.push_back(l.front());
            if(A[i] == l.front()){
                l.pop_front();
            }
            }
            i++;
            j++;
        }
    }
    return v;                                            
                                                
                                                
                                                 
 }
 
