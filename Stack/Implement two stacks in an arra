/* Aprroach :
1) using one array : for the first stack -> we start inserting from the beginning of the arr and keep track of it using a top1 ,
meanwhile we start storing the elements for the second stack from the ending of the array and keep track using top2.

*/


1) class twoStacks
{
    int *arr;
    int size;
    int top1, top2;
    public:
    
    twoStacks(int n=100)
    {
        size = n; 
        arr = new int[n]; 
        top1 = -1; 
        top2 = size;
    }
 
    //Function to push an integer into the stack1.
    void push1(int x)
    {
        arr[++top1] = x;
    }
    
    //Function to push an integer into the stack2.
    void push2(int x)
    {
       arr[--top2] = x;
    }
    
    //Function to remove an element from top of the stack1.
    int pop1()
    {
        if(top1==-1){
            return -1;
        }
        int y = arr[top1];
        top1--;
        return y;
    }
    
    //Function to remove an element from top of the stack2.
    int pop2()
    {
        if(top2 == size){
            return -1;
        }
       int y = arr[top2];
       top2++;
       return y;
    }
};
