/*Approach :
Input: n = 3
a = {1, 6, 2}
Output: -1 1 1
Explaination: There is no number at the 
left of 1. Smaller number than 6 and 2 is 1.
1)same pattern as greater : instead of searching for larger element and replacing , we look for smaller elements and replace them.
*/

1) vector<int> leftSmaller(int n, int a[]){
        vector<int>v;
        stack<int>st;
        for(int i=0;i<n;i++){
            if(st.empty()){
                v.push_back(-1);
            }
            else if(st.size() > 0 && st.top() < a[i]){
                v.push_back(st.top());
            }
            else if(st.size() > 0 && st.top() >= a[i]){
                while(st.size() > 0 && st.top() >= a[i]){
                    st.pop();
                }
                if(st.size()==0){
                    v.push_back(-1);
                }
                else{
                    v.push_back(st.top());
                }
            }
            st.push(a[i]);
        }
        return v;
    }
